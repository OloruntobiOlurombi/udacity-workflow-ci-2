# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@5.0.2

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  print_hello:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/node
    docker:
      - image: cimg/node:18.4.0
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    steps:
      # Checkout the code as the first step.
      - checkout
      # Next, the node orb's install-packages step will install the dependencies from a package.json.
      # The orb install-packages step will also automatically cache them for faster future runs.
      - run: 
          name: "Say Hello"
          command: "echo Hello"

  print_world:
    docker: 
      - image: cimg/node:18.4.0

    steps: 
      - checkout 
      - run: 
          name: "Say World"
          command: "echo World"  

  print_my_name_var: 
    docker: 
      - image: cimg/node:18.4.0 

    steps: 
      - checkout 
      - run: 
          name: "echo an env var that is part of our project"                  
          command: |
            echo $MY_ENV_VAR
workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  sample-say-hello-workflow:
    jobs:
      - print_hello
      - print_world: 
          requires: 
            - print_hello   
      - print_my_name_var      
